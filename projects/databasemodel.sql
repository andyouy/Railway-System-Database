-- MySQL Script generated by MySQL Workbench
-- Fri Apr 23 17:42:53 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema RailwaySystemDB
-- -----------------------------------------------------

-- DROP SCHEMA IF EXISTS `RailwaySystemDB` ;
-- CREATE SCHEMA IF NOT EXISTS `RailwaySystemDB` DEFAULT CHARACTER SET utf8;
USE `RailwaySystemDB`;

-- -----------------------------------------------------
-- Table `Email`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Email` ;

CREATE TABLE IF NOT EXISTS `Email` (
  `email_id` TINYINT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`email_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Customer` ;

CREATE TABLE IF NOT EXISTS `Customer` (
  `customer_id` TINYINT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) GENERATED ALWAYS AS (CONCAT(first_name," ", last_name)) VIRTUAL,
  `last_name` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `dob` DATE NOT NULL,
  `email` TINYINT NULL,
  PRIMARY KEY (`customer_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  CONSTRAINT `FK_EMAIL_ID`
    FOREIGN KEY (`email`)
    REFERENCES `Email` (`email_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Company` ;

CREATE TABLE IF NOT EXISTS `Company` (
  `company_id` TINYINT NOT NULL AUTO_INCREMENT,
  `company_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`company_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Route`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Route` ;

CREATE TABLE IF NOT EXISTS `Route` (
  `route_id` TINYINT NOT NULL AUTO_INCREMENT,
  `arrival_time` DATETIME NOT NULL,
  `departure_time` DATETIME NOT NULL,
  `departure_station` VARCHAR(45) NOT NULL,
  `arrival_station` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`route_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Station`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Station` ;

CREATE TABLE IF NOT EXISTS `Station` (
  `station_id` TINYINT NOT NULL AUTO_INCREMENT,
  `station_name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`station_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Train`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Train` ;

CREATE TABLE IF NOT EXISTS `Train` (
  `train_id` TINYINT NOT NULL AUTO_INCREMENT,
  `company` TINYINT NULL,
  `route` TINYINT NULL,
  `station` TINYINT NULL,
  PRIMARY KEY (`train_id`),
  INDEX `FK_COMPANY_TRAIN_idx` (`company` ASC) VISIBLE,
  INDEX `FK_TRAIN_ROUTE_idx` (`route` ASC) VISIBLE,
  INDEX `FK_TRAIN_STATION_idx` (`station` ASC) VISIBLE,
  CONSTRAINT `FK_TRAIN_COMPANY`
    FOREIGN KEY (`company`)
    REFERENCES `Company` (`company_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_TRAIN_ROUTE`
    FOREIGN KEY (`route`)
    REFERENCES `Route` (`route_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_TRAIN_STATION`
    FOREIGN KEY (`station`)
    REFERENCES `Station` (`station_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Ticket` ;

CREATE TABLE IF NOT EXISTS `Ticket` (
  `ticket_id` TINYINT NOT NULL AUTO_INCREMENT,
  `price` FLOAT(5,2) NOT NULL,
  `train` TINYINT NULL,
  `route` TINYINT NULL,
  `customer` TINYINT NULL,
  `company` TINYINT NOT NULL,
  PRIMARY KEY (`ticket_id`),
  INDEX `FK_TICKET_TRAIN_ID_idx` (`train` ASC) VISIBLE,
  INDEX `FK_TICKET_ROUTE_ID_idx` (`route` ASC) VISIBLE,
  INDEX `FK_TICKET_CUSTOMER_ID_idx` (`customer` ASC) VISIBLE,
  INDEX `FK_TICKET_COMPANY_idx` (`company` ASC) VISIBLE,
  CONSTRAINT `FK_TICKET_TRAIN_ID`
    FOREIGN KEY (`train`)
    REFERENCES `Train` (`train_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_TICKET_ROUTE_ID`
    FOREIGN KEY (`route`)
    REFERENCES `Route` (`route_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_TICKET_CUSTOMER_ID`
    FOREIGN KEY (`customer`)
    REFERENCES `Customer` (`customer_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_TICKET_COMPANY`
    FOREIGN KEY (`company`)
    REFERENCES `Company` (`company_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Passenger`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Passenger` ;

CREATE TABLE IF NOT EXISTS `Passenger` (
  `passenger_id` TINYINT NOT NULL AUTO_INCREMENT,
  `customer_id` TINYINT NOT NULL,
  `train` TINYINT NULL,
  `ticket` TINYINT NOT NULL,
  PRIMARY KEY (`passenger_id`, `customer_id`),
  INDEX `FK_PK_CUSTOMER_PASSENGER_idx` (`customer_id` ASC) VISIBLE,
  INDEX `FK_PASSENGER_TRAIN_ID_idx` (`train` ASC) VISIBLE,
  INDEX `FK_PASSENGER_TICKET_ID_idx` (`ticket` ASC) VISIBLE,
  CONSTRAINT `FK_PK_CUSTOMER_PASSENGER_ID`
    FOREIGN KEY (`customer_id`)
    REFERENCES `Customer` (`customer_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_PASSENGER_TRAIN_ID`
    FOREIGN KEY (`train`)
    REFERENCES `Train` (`train_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_PASSENGER_TICKET_ID`
    FOREIGN KEY (`ticket`)
    REFERENCES `Ticket` (`ticket_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Accounts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Accounts` ;

CREATE TABLE IF NOT EXISTS `Accounts` (
  `account_id` TINYINT NOT NULL AUTO_INCREMENT,
  `passwords` VARCHAR(45) NOT NULL,
  `customer` TINYINT NOT NULL,
  `email` TINYINT NOT NULL,
  `ticket` TINYINT NULL,
  PRIMARY KEY (`account_id`),
  INDEX `FK_customer_id_idx` (`customer` ASC) VISIBLE,
  INDEX `FK_ACCOUNT_EMAIL_idx` (`email` ASC) VISIBLE,
  INDEX `FK_ACCOUNT_TICKET_idx` (`ticket` ASC) VISIBLE,
  CONSTRAINT `FK_ACCOUNT_CUSTOMER_ID`
    FOREIGN KEY (`customer`)
    REFERENCES `Customer` (`customer_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ACCOUNT_EMAIL`
    FOREIGN KEY (`email`)
    REFERENCES `Email` (`email_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ACCOUNT_TICKET`
    FOREIGN KEY (`ticket`)
    REFERENCES `Ticket` (`ticket_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyTripsApp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EasyTripsApp` ;

CREATE TABLE IF NOT EXISTS `EasyTripsApp` (
  `app_id` TINYINT NOT NULL AUTO_INCREMENT,
  `accounts` TINYINT NULL,
  PRIMARY KEY (`app_id`),
  INDEX `FK_APP_ACCOUNT_ID_idx` (`accounts` ASC) VISIBLE,
  CONSTRAINT `FK_APP_ACCOUNT_ID`
    FOREIGN KEY (`accounts`)
    REFERENCES `Accounts` (`account_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Smartphone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Smartphone` ;

CREATE TABLE IF NOT EXISTS `Smartphone` (
  `smartphone_id` TINYINT NOT NULL AUTO_INCREMENT,
  `app` TINYINT NULL,
  PRIMARY KEY (`smartphone_id`),
  INDEX `FK_SMARTPHONE_APP_idx` (`app` ASC) VISIBLE,
  CONSTRAINT `FK_SMARTPHONE_APP`
    FOREIGN KEY (`app`)
    REFERENCES `EasyTripsApp` (`app_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CustomerSmartphone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CustomerSmartphone` ;

CREATE TABLE IF NOT EXISTS `CustomerSmartphone` (
  `customer_phone_id` TINYINT NOT NULL AUTO_INCREMENT,
  `smartphone` TINYINT NULL,
  `customer` TINYINT NULL,
  PRIMARY KEY (`customer_phone_id`),
  INDEX `FK_SMARTPHONE_CUSTOMERPHONE_idx` (`smartphone` ASC) VISIBLE,
  INDEX `FK_CUSTOMER_SMARTPHONE_idx` (`customer` ASC) VISIBLE,
  CONSTRAINT `FK_SMARTPHONE_CUSTOMERPHONE`
    FOREIGN KEY (`smartphone`)
    REFERENCES `Smartphone` (`smartphone_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_CUSTOMER_SMARTPHONE`
    FOREIGN KEY (`customer`)
    REFERENCES `Customer` (`customer_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Seats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Seats` ;

CREATE TABLE IF NOT EXISTS `Seats` (
  `seat_id` TINYINT NOT NULL,
  `train` TINYINT NOT NULL,
  `seat_capacity` INT(3) NOT NULL,
  PRIMARY KEY (`seat_id`, `train`),
  INDEX `FK_SEAT_TRAIN_ID_idx` (`train` ASC) VISIBLE,
  CONSTRAINT `FK_SEAT_TRAIN_ID`
    FOREIGN KEY (`train`)
    REFERENCES `Train` (`train_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FirstClassSeat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FirstClassSeat` ;

CREATE TABLE IF NOT EXISTS `FirstClassSeat` (
  `first_class_id` TINYINT NOT NULL AUTO_INCREMENT,
  `first_seat_number` CHAR(2) NOT NULL,
  `seat` TINYINT NOT NULL,
  PRIMARY KEY (`first_class_id`, `seat`),
  INDEX `FK_FIRST_CLASS_SEAT_idx` (`seat` ASC) VISIBLE,
  UNIQUE INDEX `first_seat_number_UNIQUE` (`first_seat_number` ASC) VISIBLE,
  CONSTRAINT `FK_FIRST_CLASS_SEAT`
    FOREIGN KEY (`seat`)
    REFERENCES `Seats` (`seat_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CoachClassSeat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CoachClassSeat` ;

CREATE TABLE IF NOT EXISTS `CoachClassSeat` (
  `coach_class_id` TINYINT NOT NULL AUTO_INCREMENT,
  `coach_seat_number` CHAR(2) NOT NULL,
  `seat` TINYINT NOT NULL,
  PRIMARY KEY (`coach_class_id`, `seat`),
  INDEX `FK_COACH_CLASS_SEAT_idx` (`seat` ASC) VISIBLE,
  UNIQUE INDEX `coach_seat_number_UNIQUE` (`coach_seat_number` ASC) VISIBLE,
  CONSTRAINT `FK_COACH_CLASS_SEAT`
    FOREIGN KEY (`seat`)
    REFERENCES `Seats` (`seat_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Employee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Employee` ;

CREATE TABLE IF NOT EXISTS `Employee` (
  `employee_id` TINYINT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(40) GENERATED ALWAYS AS (CONCAT(first_name," ", last_name)) VIRTUAL,
  `first_name` VARCHAR(20) NOT NULL,
  `last_name` VARCHAR(20) NOT NULL,
  `company` TINYINT NOT NULL,
  PRIMARY KEY (`employee_id`, `company`),
  INDEX `FK_EMPLOYEE_COMANY_idx` (`company` ASC) VISIBLE,
  CONSTRAINT `FK_EMPLOYEE_COMANY`
    FOREIGN KEY (`company`)
    REFERENCES `Company` (`company_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RailwayPolice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RailwayPolice` ;

CREATE TABLE IF NOT EXISTS `RailwayPolice` (
  `railway_police_id` TINYINT NOT NULL AUTO_INCREMENT,
  `employee_id` TINYINT NOT NULL,
  `station_id` TINYINT NULL,
  PRIMARY KEY (`railway_police_id`, `employee_id`),
  INDEX `FK_RAILWAY_POLICE_STATION_idx` (`station_id` ASC) VISIBLE,
  INDEX `FK_PK_RAILWAY_POLICE_EMPLOYEE_idx` (`employee_id` ASC) VISIBLE,
  CONSTRAINT `FK_PK_RAILWAY_POLICE_EMPLOYEE`
    FOREIGN KEY (`employee_id`)
    REFERENCES `Employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_RAILWAY_POLICE_STATION`
    FOREIGN KEY (`station_id`)
    REFERENCES `Station` (`station_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BillingAddress`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BillingAddress` ;

CREATE TABLE IF NOT EXISTS `BillingAddress` (
  `billing_id` TINYINT NOT NULL AUTO_INCREMENT,
  `street` VARCHAR(100) NOT NULL,
  `zipcode` INT(5) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `country` CHAR(2) NOT NULL,
  `house_number` INT(4) NOT NULL,
  PRIMARY KEY (`billing_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PaymentType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PaymentType` ;

CREATE TABLE IF NOT EXISTS `PaymentType` (
  `payment_type_id` TINYINT NOT NULL AUTO_INCREMENT,
  `dates` DATETIME NOT NULL,
  `billing_address` TINYINT NULL,
  PRIMARY KEY (`payment_type_id`),
  INDEX `FK_PAYMENTTYPE_BILLING_idx` (`billing_address` ASC) VISIBLE,
  CONSTRAINT `FK_PAYMENTTYPE_BILLING`
    FOREIGN KEY (`billing_address`)
    REFERENCES `BillingAddress` (`billing_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `StationManager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `StationManager` ;

CREATE TABLE IF NOT EXISTS `StationManager` (
  `station_manager_id` TINYINT NOT NULL AUTO_INCREMENT,
  `employee_id` TINYINT NOT NULL,
  `station` TINYINT NULL,
  PRIMARY KEY (`station_manager_id`, `employee_id`),
  INDEX `FK_STATION _idx` (`station` ASC) VISIBLE,
  INDEX `FK_STATIONMANAGER_EMPLOYEE_idx` (`employee_id` ASC) VISIBLE,
  CONSTRAINT `FK_STATIONMANAGER_STATION`
    FOREIGN KEY (`station`)
    REFERENCES `Station` (`station_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_PK_STATIONMANAGER_EMPLOYEE`
    FOREIGN KEY (`employee_id`)
    REFERENCES `Employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CreditCard`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CreditCard` ;

CREATE TABLE IF NOT EXISTS `CreditCard` (
  `credit_card_id` TINYINT NOT NULL AUTO_INCREMENT,
  `card_number` VARCHAR(16) NOT NULL,
  `cvv` CHAR(3) NOT NULL,
  `expiration_date` DATE NOT NULL,
  `payment_type` TINYINT NOT NULL,
  PRIMARY KEY (`credit_card_id`, `payment_type`),
  INDEX `FK_PAYMENT_CREDIT_idx` (`payment_type` ASC) VISIBLE,
  CONSTRAINT `FK_PAYMENT_CREDIT`
    FOREIGN KEY (`payment_type`)
    REFERENCES `PaymentType` (`payment_type_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Conductor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Conductor` ;

CREATE TABLE IF NOT EXISTS `Conductor` (
  `conductor_id` TINYINT NOT NULL AUTO_INCREMENT,
  `employee_id` TINYINT NOT NULL,
  `train_id` TINYINT NULL,
  PRIMARY KEY (`conductor_id`, `employee_id`),
  INDEX `FK_CONDUCTOR_EMPLOYEE_idx` (`employee_id` ASC) VISIBLE,
  INDEX `FK_CONDUCTOR_TRAIN_idx` (`train_id` ASC) VISIBLE,
  CONSTRAINT `FK_PK_CONDUCTOR_EMPLOYEE`
    FOREIGN KEY (`employee_id`)
    REFERENCES `Employee` (`employee_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_CONDUCTOR_TRAIN`
    FOREIGN KEY (`train_id`)
    REFERENCES `Train` (`train_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CustomerPayment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CustomerPayment` ;

CREATE TABLE IF NOT EXISTS `CustomerPayment` (
  `customer_payment_id` TINYINT NOT NULL AUTO_INCREMENT,
  `payment_id` TINYINT NULL,
  `customer_id` TINYINT NULL,
  PRIMARY KEY (`customer_payment_id`),
  INDEX `FK_CUSTOMER_PAYMENT_TYPE_idx` (`payment_id` ASC) VISIBLE,
  INDEX `FK_CUSTOMER_PAYMENT_CUSTOMER_ID_idx` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `FK_CUSTOMER_PAYMENT_TYPE`
    FOREIGN KEY (`payment_id`)
    REFERENCES `PaymentType` (`payment_type_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_CUSTOMER_PAYMENT_CUSTOMER_ID`
    FOREIGN KEY (`customer_id`)
    REFERENCES `Customer` (`customer_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DebitCard`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DebitCard` ;

CREATE TABLE IF NOT EXISTS `DebitCard` (
  `debit_card_id` TINYINT NOT NULL AUTO_INCREMENT,
  `debit_card_number` VARCHAR(16) NOT NULL,
  `debit_cvv` CHAR(3) NOT NULL,
  `debit_expiration_date` DATE NOT NULL,
  `payment_type` TINYINT NOT NULL,
  PRIMARY KEY (`debit_card_id`, `payment_type`),
  INDEX `FK_PK_DEBIT_PAYMENT_TYPE_idx` (`payment_type` ASC) VISIBLE,
  CONSTRAINT `FK_PK_DEBIT_PAYMENT_TYPE`
    FOREIGN KEY (`payment_type`)
    REFERENCES `PaymentType` (`payment_type_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FirstClassTicket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FirstClassTicket` ;

CREATE TABLE IF NOT EXISTS `FirstClassTicket` (
  `first_class_ticket_id` TINYINT NOT NULL,
  `ticket` TINYINT NOT NULL,
  `first_class_seat_num` CHAR(2) NOT NULL,
  PRIMARY KEY (`first_class_ticket_id`),
  INDEX `FK_PK_FIRST_CLASS_TICKET_ID_idx` (`ticket` ASC) VISIBLE,
  UNIQUE INDEX `first_class_seat_num_UNIQUE` (`first_class_seat_num` ASC) VISIBLE,
  CONSTRAINT `FK_PK_FIRST_CLASS_TICKET_ID`
    FOREIGN KEY (`ticket`)
    REFERENCES `Ticket` (`ticket_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CoachClassTicket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CoachClassTicket` ;

CREATE TABLE IF NOT EXISTS `CoachClassTicket` (
  `coach_class_ticket_id` TINYINT NOT NULL,
  `ticket` TINYINT NOT NULL,
  `coach_class_seat_num` CHAR(2) NOT NULL,
  PRIMARY KEY (`coach_class_ticket_id`, `ticket`),
  INDEX `FK_PK_COACH_CLASS_TICKET_ID_idx` (`ticket` ASC) VISIBLE,
  UNIQUE INDEX `coach_class_seat_num_UNIQUE` (`coach_class_seat_num` ASC) VISIBLE,
  CONSTRAINT `FK_PK_COACH_CLASS_TICKET_ID`
    FOREIGN KEY (`ticket`)
    REFERENCES `Ticket` (`ticket_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -------------------------------------------------------
-- Trigger decrements seats each time a Ticket is inserted
-- -------------------------------------------------------
-- DELIMITER $$

-- CREATE TRIGGER decrementSeats AFTER INSERT ON Ticket
-- FOR EACH ROW
-- 	BEGIN
--    DECLARE capacity INT(3);
--    DECLARE train_exist INT;
--    SET train_exist = (select COUNT(*) FROM Seats WHERE train = new.train);
--    IF(train_exist > 0) THEN
-- 			UPDATE SEATS SET seat_capacity = seat_capacity - 1 WHERE train = new.train;
-- 	END IF;

--    END $$

 -- -------------------------------------------------------
-- Trigger adds seat capacity to a train once a train is inserted
-- -------------------------------------------------------

--  TRIGGER addSeats AFTER INSERT ON Train
-- FOR EACH ROW
-- BEGIN
--    DECLARE capacity INT(3);
--    DECLARE seat_exist INT;
--    SET seat_exist = (select COUNT(*) FROM Seats WHERE train = new.train_id);
--    IF(seat_exist > 0) THEN
-- 		UPDATE SEATS SET seat_capacity = 100 WHERE train = new.train_id;
-- ELSE
-- INSERT INTO SEATS (seat_id, seat_capacity, train) VALUES (new.train_id, 100, new.train_id);
-- 	END IF;

-- END $$

-- -------------------------------------------------------
-- Procedure to check amount of available seats
-- -------------------------------------------------------
-- CREATE PROCEDURE availableSeats(IN seatid TINYINT, out freeSeats INT(3))
-- BEGIN
-- 		SET freeSeats = (SELECT (seat_capacity) FROM Seats WHERE seatid = seat_id);
-- END $$

-- -------------------------------------------------------
-- Function returns the earliest departure time for given station
-- -------------------------------------------------------
-- CREATE FUNCTION routeDeparture (station VARCHAR(45))
-- RETURNS DATETIME
-- DETERMINISTIC
-- BEGIN
-- 	DECLARE departure_date DATETIME;
--    SET departure_date = (SELECT min(departure_time) FROM Route departure_time
-- 	WHERE departure_station = station);
--    RETURN departure_date;
-- END $$


-- DELIMITER ;

-- SET SQL_MODE=@OLD_SQL_MODE;
-- SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
-- SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
